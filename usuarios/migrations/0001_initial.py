# Generated by Django 5.2.1 on 2025-05-26 10:20

import django.contrib.auth.models
import django.core.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.EmailField(max_length=254, unique=True, validators=[django.core.validators.EmailValidator()], verbose_name='email address')),
                ('tipo', models.CharField(choices=[('USUARIO', 'Usuario'), ('EMPRESA', 'Empresa')], max_length=10)),
                ('telefono', models.CharField(blank=True, max_length=20)),
                ('provincia', models.CharField(blank=True, choices=[('Álava', 'Álava'), ('Albacete', 'Albacete'), ('Alicante', 'Alicante'), ('Almería', 'Almería'), ('Asturias', 'Asturias'), ('Ávila', 'Ávila'), ('Badajoz', 'Badajoz'), ('Barcelona', 'Barcelona'), ('Burgos', 'Burgos'), ('Cáceres', 'Cáceres'), ('Cádiz', 'Cádiz'), ('Castellón', 'Castellón'), ('Ciudad Real', 'Ciudad Real'), ('Córdoba', 'Córdoba'), ('Cuenca', 'Cuenca'), ('Gerona', 'Gerona'), ('Granada', 'Granada'), ('Guadalajara', 'Guadalajara'), ('Guipúzcoa', 'Guipúzcoa'), ('Huelva', 'Huelva'), ('Huesca', 'Huesca'), ('Jaén', 'Jaén'), ('La Rioja', 'La Rioja'), ('Las Palmas', 'Las Palmas'), ('León', 'León'), ('Lérida', 'Lérida'), ('Lugo', 'Lugo'), ('Madrid', 'Madrid'), ('Málaga', 'Málaga'), ('Murcia', 'Murcia'), ('Navarra', 'Navarra'), ('Orense', 'Orense'), ('Palencia', 'Palencia'), ('Pontevedra', 'Pontevedra'), ('Salamanca', 'Salamanca'), ('Segovia', 'Segovia'), ('Sevilla', 'Sevilla'), ('Soria', 'Soria'), ('Tarragona', 'Tarragona'), ('Teruel', 'Teruel'), ('Toledo', 'Toledo'), ('Valencia', 'Valencia'), ('Valladolid', 'Valladolid'), ('Vizcaya', 'Vizcaya'), ('Zamora', 'Zamora'), ('Zaragoza', 'Zaragoza')], max_length=50)),
                ('tiene_ninos', models.BooleanField(default=False)),
                ('tiene_otros_animales', models.BooleanField(default=False)),
                ('tipo_vivienda', models.BooleanField(default=False)),
                ('prefiere_pequenos', models.BooleanField(default=False)),
                ('disponible_para_paseos', models.BooleanField(default=False)),
                ('acepta_enfermos', models.BooleanField(default=False)),
                ('acepta_viejos', models.BooleanField(default=False)),
                ('busca_tranquilo', models.BooleanField(default=False)),
                ('tiene_trabajo', models.BooleanField(default=False)),
                ('animal_estara_solo', models.BooleanField(default=False)),
                ('nombre_empresa', models.CharField(blank=True, max_length=100)),
                ('es_aprobada', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
